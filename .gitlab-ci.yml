stages:
  - lint_and_test
  - build

services:
  - name: docker:20.10.21-dind
    command: ["--tls=false"]

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  IMAGE: grafana-alerts-operator
  ECR_REGISTRY: URL_PLACEHOLDER
  OCIR_REGISTRY: URL_PLACEHOLDER

lint:
  stage: lint_and_test
  image: registry.gitlab.com/pipeline-components/pylint:latest
  script:
    - pylint --exit-zero --load-plugins=pylint_gitlab --output-format=gitlab-codeclimate:codeclimate.json **/*.py
  artifacts:
    reports:
      codequality: codeclimate.json
    when: always
    expire_in: "2 days"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always
    - when: never
  allow_failure: true
  interruptible: true

test:
  image: python:3.11-alpine
  stage: lint_and_test
  before_script:
    - pip install -r src/requirements.txt
  script:
    - pytest -vv --cov ./ --cov-report term --cov-report xml:coverage.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    when: always
    expire_in: "7 days"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always
    - when: never
  interruptible: true

build_image_aws:
  image: docker:20.10.21
  stage: build
  variables:
    AWS_DEFAULT_REGION: us-west-2
    IMAGE_NAME: ${ECR_REGISTRY}/${IMAGE}
    IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
    IMAGE_DIR: ./
  script:
    - apk update && apk add --no-cache python3 py3-pip
    - pip3 install --upgrade pip && pip3 install awscli
    - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
    - docker build --tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_DIR}
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}
    # - docker push ${IMAGE_NAME}:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

build_image_oci:
  image: docker:20.10.21
  stage: build
  variables:
    AWS_DEFAULT_REGION: us-west-2
    IMAGE_NAME: ${OCIR_REGISTRY}/${IMAGE}
    IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
    IMAGE_DIR: ./
  script:
    - apk update && apk add --no-cache python3 py3-pip
    - pip3 install --upgrade pip
    - echo "${OCI_REGISTRY_TOKEN}" | base64 -d | docker login --username ${OCI_REGISTRY_USER} --password-stdin ${OCIR_REGISTRY}
    - docker build --tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_DIR}
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}
    # - docker push ${IMAGE_NAME}:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

